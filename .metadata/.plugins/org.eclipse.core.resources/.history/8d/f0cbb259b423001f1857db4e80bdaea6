package in.ashokit.rest;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.fasterxml.jackson.databind.ObjectMapper;

import in.ashokit.constants.AppConstants;
import in.ashokit.entity.User;
import in.ashokit.props.AppProperties;
import in.ashokit.response.ApiResponse;
import in.ashokit.service.UserService;

@RestController
public class UserRestController {

	@Autowired
	private UserService userService;

	@Autowired
	private AppProperties props;

	@PostMapping("/register")
	public ResponseEntity<ApiResponse<User>> createUser(@RequestParam("user") String userJson,
			@RequestParam("file") MultipartFile file) throws Exception {

		ApiResponse<User> response = new ApiResponse<>();
		Map<String, String> messages = props.getMessages();

		ObjectMapper mapper = new ObjectMapper();
		User user = mapper.readValue(userJson, User.class);

		User addedUser = userService.addUser(user, file);

		if (addedUser != null) {
			response.setStatus(201);
			response.setMessage(messages.get(AppConstants.USER_REG));
			response.setData(addedUser);
		} else {
			response.setStatus(500);
			response.setMessage(messages.get(AppConstants.USER_REG_ERR));
		}

		return new ResponseEntity<>(response, HttpStatus.CREATED);
	}

	@PostMapping("/login")
	public ResponseEntity<ApiResponse<User>> login(@RequestBody User user) {

		ApiResponse<User> response = new ApiResponse<>();
		Map<String, String> messages = props.getMessages();

		User loggedInUser = userService.login(user);

		if (loggedInUser != null) {
			response.setStatus(200);
			response.setMessage(messages.get(AppConstants.LOGIN));
			response.setData(loggedInUser);
		} else {
			response.setStatus(500);
			response.setMessage(messages.get(AppConstants.LOGIN_ERR));
		}

		return new ResponseEntity<>(response, HttpStatus.OK);
	}

}
